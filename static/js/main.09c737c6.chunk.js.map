{"version":3,"sources":["components/NoConversation.js","components/Message.js","components/Conversation.js","components/ConversationList.js","UploadForm.js","App.js","index.js"],"names":["NoConversation","react_default","a","createElement","className","Message","_ref","message","style","username","created_at","sender","cx","mine","heart","story_share","media","media_share_caption","media_share_url","media_owner","text","href","src","alt","formatContent","moment","format","Conversation","props","rowRenderer","key","index","Message_Message","selectedConversation","conversation","NoConversation_NoConversation","_props$selectedConver","participants","conversationLength","length","es","_ref2","height","width","columnWidth","rowCount","rowHeight","outline","scrollToIndex","ConversationList","messages","ConversationList-item","selected","Object","objectSpread","onClick","onConversationSelected","join","UploadForm","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","reader","FileReader","addEventListener","threads","JSON","parse","result","freqs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","thread","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","participant","err","return","setUsername","keys","reduce","b","setMessages","readAsText","bind","this","activeClassName","rejectClassName","isDragActive","isDragReject","Fragment","App","state","selectConversation","_this","setState","map","reverse","filter","UploadForm_UploadForm","ConversationList_ConversationList","Conversation_Conversation","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.09c737c6.chunk.js","sourcesContent":["import React from 'react';\n\nimport './NoConversation.css';\n\nexport default function NoConversation() {\n    return (\n        <div className=\"NoConversation\">\n            <h2>Select a conversation from the panel on the left.</h2>\n        </div>\n    );\n}\n","import React from 'react';\nimport cx from 'classnames';\nimport moment from 'moment';\n\nimport './Message.css';\n\nfunction formatContent(message) {\n  const {\n    heart,\n    story_share,\n    media,\n    media_share_caption,\n    media_share_url,\n    media_owner,\n    text\n  } = message;\n  if (story_share) {\n    return story_share;\n  }\n  if (heart) {\n    return heart;\n  }\n  if (media_share_caption) {\n    return (\n      <a href={media_share_url}>\n        Shared {media_owner}'s post: {media_share_caption}\n      </a>\n    );\n  }\n  if (media) {\n    return (\n      <a href={media}>\n        <img src={media} alt=\"Direct Image\" />\n      </a>\n    );\n  }\n  if (text) {\n    return text;\n  }\n}\n\nexport default function Message({ message, style, username }) {\n  const { created_at, sender } = message;\n\n  return (\n    <div\n      className={cx({\n        Message: true,\n        mine: sender === username\n      })}\n      style={style}\n    >\n      {formatContent(message)}\n      <br />\n      <em className=\"timestamp\">\n        {moment(created_at).format('MMM Do YYYY, h:mm:ss a')}\n      </em>\n    </div>\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { AutoSizer, List } from 'react-virtualized';\n\nimport NoConversation from './NoConversation.js';\nimport Message from './Message.js';\n\nimport './Conversation.css';\n\nexport default function Conversation(props) {\n  const rowRenderer = ({ key, index, style }) => (\n    <Message\n      key={key}\n      message={props.selectedConversation.conversation[index]}\n      style={style}\n      username={props.username}\n    />\n  );\n\n  if (!props.selectedConversation) {\n    return <NoConversation />;\n  }\n  const { participants, conversation } = props.selectedConversation;\n  const conversationLength = conversation.length;\n\n  return (\n    <div className=\"Conversation\">\n      <div className=\"Conversation-participant\">\n        <h3>\n          {participants}{' '}\n          <span className=\"small\">\n            ({conversationLength} messages sent since{' '}\n            {moment(conversation[0].created_at).format('MMM Do YYYY')})\n          </span>\n        </h3>\n      </div>\n\n      <div className=\"Conversation-messages\">\n        <AutoSizer>\n          {({ height, width }) => (\n            <List\n              width={width}\n              height={height}\n              columnWidth=\"50%\"\n              rowCount={conversationLength}\n              rowHeight={65}\n              rowRenderer={rowRenderer}\n              style={{ outline: 'none' }}\n              scrollToIndex={conversationLength - 1}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport cx from 'classnames';\nimport { AutoSizer, List } from 'react-virtualized';\n\nimport './ConversationList.css';\n\nexport default function ConversationList(props) {\n  const rowRenderer = ({ key, index, style }) => {\n    const message = props.messages[index];\n    return (\n      <li\n        className={cx({\n          'ConversationList-item': true,\n          selected: message === props.selectedConversation\n        })}\n        key={key}\n        style={{\n          ...style\n        }}\n        onClick={() => props.onConversationSelected(message)}\n      >\n        {message.participants.join(', ')} ({message.conversation.length})\n      </li>\n    );\n  };\n\n  const { messages } = props;\n  if (messages == null) {\n    debugger;\n    return null;\n  }\n  return (\n    <ul className=\"ConversationList\">\n      <AutoSizer>\n        {({ height, width }) => (\n          <List\n            width={width}\n            height={height}\n            rowCount={messages.length}\n            rowHeight={50}\n            rowRenderer={rowRenderer}\n            style={{ outline: 'none' }}\n          />\n        )}\n      </AutoSizer>\n    </ul>\n  );\n}\n","import React from 'react';\nimport Dropzone from 'react-dropzone';\n\nimport './UploadForm.css';\n\nexport default function UploadForm(props) {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    if (acceptedFiles.length !== 0) {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', () => {\n        const threads = JSON.parse(reader.result);\n        const freqs = {};\n        for (const thread of threads) {\n          for (const participant of thread.participants) {\n            freqs[participant] = (freqs[participant] || 0) + 1;\n          }\n        }\n        props.setUsername(\n          Object.keys(freqs).reduce((a, b) => (freqs[a] > freqs[b] ? a : b))\n        );\n        props.setMessages(threads);\n      });\n      reader.readAsText(acceptedFiles[0]);\n    }\n  };\n\n  return (\n    <div className=\"UploadForm\">\n      <div className=\"UploadForm-instructions\">\n        <p>\n          IG DM Archive Viewer is a tool that allows you to view your Instagram\n          Direct conversation archive, allowing you to search and see the oldest\n          messages in a DM thread.\n        </p>\n        <p>\n          To get started, you'll need to download your Instagram data export by\n          following the official instructions at{' '}\n          <a href=\"https://www.instagram.com/download/request/\">\n            instagram.com/download/request\n          </a>\n          .\n        </p>\n        <p>\n          Once you've downloaded your archive, extract the <code>.zip</code>{' '}\n          folder, then drag and drop the <code>messages.json</code> file into\n          the area below.\n        </p>\n      </div>\n\n      <Dropzone\n        accept=\"application/json\"\n        onDrop={onDrop.bind(this)}\n        className=\"UploadForm-dropzone\"\n        activeClassName=\"UploadForm-dropzone-active\"\n        rejectClassName=\"UploadForm-dropzone-rejected\"\n      >\n        {({ isDragActive, isDragReject, acceptedFiles, rejectedFiles }) => {\n          return (\n            <React.Fragment>\n              {(isDragReject || rejectedFiles.length > 0) && (\n                <p>\n                  <strong className=\"UploadForm-error\">\n                    File incompatible, please upload a <code>.json</code> file.\n                  </strong>\n                </p>\n              )}\n              <p>\n                Drag and drop <code>messages.json</code> from your IG export\n                here, or click to select a file. Only <code>.json</code> files\n                are accepted.\n              </p>\n              <p>\n                All data processing is done right on your computer. Nobody\n                except for you will be able to see your messages.\n              </p>\n            </React.Fragment>\n          );\n        }}\n      </Dropzone>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\nimport Conversation from './components/Conversation.js';\nimport ConversationList from './components/ConversationList.js';\nimport UploadForm from './UploadForm.js';\n\nimport './App.css';\nimport 'react-virtualized/styles.css';\n\nclass App extends Component {\n  state = {\n    selectedConversation: null,\n    messages: [],\n    username: null\n  };\n\n  selectConversation = conversation =>\n    this.setState({ selectedConversation: conversation });\n\n  setMessages = messages =>\n    this.setState({\n      messages: messages.map(({ conversation, participants }) => {\n        return {\n          conversation: conversation.reverse(),\n          participants: participants.filter(\n            participant => participant !== this.state.username\n          )\n        };\n      })\n    });\n\n  setUsername = username =>\n    this.setState({\n      username: username\n    });\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <a\n            className=\"App-subtitle\"\n            href=\"https://www.github.com/VictorVation/ig-dm-archive-viewer/\"\n          >\n            GitHub\n          </a>\n          <h1 className=\"App-title\">IG DM Archive Viewer</h1>\n          {this.state.username && (\n            <small className=\"App-username\">\n              Viewing as: {this.state.username}\n            </small>\n          )}\n        </header>\n        <div className=\"App-content\">\n          {!this.state.username && (\n            <UploadForm\n              setMessages={this.setMessages}\n              setUsername={this.setUsername}\n            />\n          )}\n          {this.state.username && (\n            <>\n              <ConversationList\n                messages={this.state.messages}\n                onConversationSelected={this.selectConversation}\n                selectedConversation={this.state.selectedConversation}\n              />\n              <Conversation\n                selectedConversation={this.state.selectedConversation}\n                username={this.state.username}\n              />\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}